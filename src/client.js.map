{"version":3,"sources":["../../src/client.jsx"],"names":[],"mappings":"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","file":"client.js","sourcesContent":["const API_ROOT = document.body.dataset.apiRoot;\nif (!API_ROOT) {\n  throw new Error('Host Page missing data-api-root attribute on <body> element');\n}\n\nexport class HTTPError extends Error {\n  constructor(status, message) {\n    super(message);\n    this.status = status;\n    this.message = message;\n  }\n\n  get isUnauthorized() {\n    return this.status === 401;\n  }\n\n  get isNotFound() {\n    return this.status === 404;\n  }\n\n}\n\nexport async function login(email, password, expiry) {\n  const res =  await request({path: '/login', method: 'POST', payload: {email, password, expiry}});\n  return await res.json().then(json => json.accessToken);\n}\n\nexport async function verifyToken(token) {\n  return await request({path: '/', token}).then(res => res.ok);\n}\n\nexport async function getApps(token) {\n  return await request({path: '/apps', token}).then(res => res.json()).then(json => json.apps);\n}\n\nexport async function updateApp(token, appId, {name, logo}) {\n  const res = await request({path: `/apps/${encodeURIComponent(appId)}`, method: 'PUT', payload: {name, logo}, token});\n  return await res.json().then(json => json.app);\n}\n\nexport async function getAppUsers(token, appId) {\n  return await request({path: `/apps/${encodeURIComponent(appId)}`, token});\n}\n\nasync function request({path, method='GET', payload, token}) {\n  method = method.toUpperCase();\n  const params = new URLSearchParams(method === 'GET' ? payload : {});\n  const headers = new Headers({'Content-Type': 'application/json', Accept: 'application/json'});\n  if (token) {\n    headers.set('Authorization', token);\n  }\n\n  const res = await fetch(`${API_ROOT}${path}?${params}`, {\n    mode: 'cors',\n    method,\n    headers,\n    body: method !== 'GET' ? JSON.stringify(payload): null,\n  });\n  \n  if (res.ok) {\n    return res;\n  } else {\n    const json = res.json();\n    return Promise.reject(new HTTPError(res.status, json.error));\n  }\n}"]}